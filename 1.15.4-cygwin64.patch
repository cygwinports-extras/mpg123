--- origsrc/mpg123-1.15.4/src/libmpg123/dct64_x86_64.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/dct64_x86_64.S	2013-09-17 21:16:47.087971100 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *out0 */
 #define ARG0 %r9
 /* short *out1 */
@@ -71,7 +71,7 @@ ASM_NAME(costab_x86_64):
 	ALIGN16
 .globl ASM_NAME(dct64_x86_64)
 ASM_NAME(dct64_x86_64):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movq		%rcx, ARG0
 	subq		$168, %rsp /* stack alignment + 10 xmm registers */
 	movaps		%xmm6, (%rsp)
@@ -446,7 +446,7 @@ ASM_NAME(dct64_x86_64):
 	movw		%ax, 416(ARG1)
 	movw		%cx, 480(ARG1)
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm8
--- origsrc/mpg123-1.15.4/src/libmpg123/dct64_x86_64_float.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/dct64_x86_64_float.S	2013-09-17 21:16:47.106972200 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *out0 */
 #define ARG0 %r9
 /* short *out1 */
@@ -71,7 +71,7 @@ ASM_NAME(costab_x86_64):
 	ALIGN16
 .globl ASM_NAME(dct64_real_x86_64)
 ASM_NAME(dct64_real_x86_64):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movq		%rcx, ARG0
 	subq		$168, %rsp /* stack alignment + 10 xmm registers */
 	movaps		%xmm6, (%rsp)
@@ -408,7 +408,7 @@ ASM_NAME(dct64_real_x86_64):
 	movss		%xmm2, 832(ARG1)
 	movss		%xmm3, 960(ARG1)
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm8
--- origsrc/mpg123-1.15.4/src/libmpg123/mangle.h	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/mangle.h	2013-09-17 21:14:06.786802400 -0500
@@ -58,7 +58,7 @@
 #if defined(__USER_LABEL_PREFIX__)
 #define ASM_NAME(a) MANGLE_MACROCAT(__USER_LABEL_PREFIX__,a)
 #define ASM_VALUE(a) MANGLE_MACROCAT($,ASM_NAME(a))
-#elif defined(__CYGWIN__) || defined(_WIN32) && !defined (_WIN64) || defined(__OS2__) || \
+#elif ((defined(__CYGWIN__) || defined(_WIN32)) && !defined (__x86_64__)) || defined(__OS2__) || \
    (defined(__OpenBSD__) && !defined(__ELF__)) || defined(__APPLE__)
 #define ASM_NAME(a) MANGLE_MACROCAT(_,a)
 #define ASM_VALUE(a) MANGLE_MACROCAT($_,a)
--- origsrc/mpg123-1.15.4/src/libmpg123/synth_stereo_x86_64.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/synth_stereo_x86_64.S	2013-09-17 21:16:47.283982300 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *window; */
 #define WINDOW %r10
 /* short *b0l; */
@@ -57,7 +57,7 @@ ASM_NAME(maxmin_x86_64):
 	ALIGN16
 .globl ASM_NAME(synth_1to1_s_x86_64_asm)
 ASM_NAME(synth_1to1_s_x86_64_asm):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movl		40(%rsp), %eax /* 5th argument; placed after 32-byte shadow space */
 	subq		$168, %rsp /* stack alignment + 10 xmm registers */
 	movaps		%xmm6, (%rsp)
@@ -72,7 +72,7 @@ ASM_NAME(synth_1to1_s_x86_64_asm):
 	movaps		%xmm15, 144(%rsp)
 #endif
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	shlq		$32, %rax
 	shrq		$31, %rax
 	movq		%rcx, %r10
@@ -317,7 +317,7 @@ Loop_start_2:
 	movd		%xmm0, %eax
 	andl		$0xffff, %eax
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm8
--- origsrc/mpg123-1.15.4/src/libmpg123/synth_stereo_x86_64_accurate.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/synth_stereo_x86_64_accurate.S	2013-09-17 21:16:47.302983400 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *window; */
 #define WINDOW %rsi
 /* short *b0l; */
@@ -56,7 +56,7 @@ ASM_NAME(maxmin_s16):
 	ALIGN16
 .globl ASM_NAME(synth_1to1_s_x86_64_accurate_asm)
 ASM_NAME(synth_1to1_s_x86_64_accurate_asm):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movl		40(%rsp), %eax /* 5th argument; placed after 32-byte shadow space */
 	pushq		%rsi
 	subq		$176, %rsp /* 10 xmm registers + temp */
@@ -79,7 +79,7 @@ ASM_NAME(synth_1to1_s_x86_64_accurate_as
 	xorps		%xmm0, %xmm0
 	movaps		%xmm0, TEMP_CLIP
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	shlq		$32, %rax
 	shrq		$30, %rax
 	movq		%rcx, %rbx
@@ -433,7 +433,7 @@ Loop_start_2:
 	movd		%xmm0, %eax
 	andl		$0xffff, %eax
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm8
--- origsrc/mpg123-1.15.4/src/libmpg123/synth_stereo_x86_64_float.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/synth_stereo_x86_64_float.S	2013-09-17 21:16:47.317984300 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *window; */
 #define WINDOW %r10
 /* short *b0l; */
@@ -50,7 +50,7 @@ ASM_NAME(scale_x86_64):
 	ALIGN16
 .globl ASM_NAME(synth_1to1_real_s_x86_64_asm)
 ASM_NAME(synth_1to1_real_s_x86_64_asm):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movl		40(%rsp), %eax /* 5th argument; placed after 32-byte shadow space */
 	subq		$168, %rsp /* stack alignment + 10 xmm registers */
 	movaps		%xmm6, (%rsp)
@@ -67,7 +67,7 @@ ASM_NAME(synth_1to1_real_s_x86_64_asm):
 
 	leaq		ASM_NAME(scale_x86_64)(%rip), %r11
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	shlq		$32, %rax
 	shrq		$30, %rax
 	movq		%rcx, %r10
@@ -378,7 +378,7 @@ Loop_start_2:
 	
 	xorl		%eax, %eax
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm8
--- origsrc/mpg123-1.15.4/src/libmpg123/synth_stereo_x86_64_s32.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/synth_stereo_x86_64_s32.S	2013-09-17 21:16:47.323984600 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *window; */
 #define WINDOW %rsi
 /* short *b0l; */
@@ -63,7 +63,7 @@ ASM_NAME(maxmin_s32):
 	ALIGN16
 .globl ASM_NAME(synth_1to1_s32_s_x86_64_asm)
 ASM_NAME(synth_1to1_s32_s_x86_64_asm):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movl		40(%rsp), %eax /* 5th argument; placed after 32-byte shadow space */
 	pushq		%rsi
 	pushq		%rdi
@@ -82,7 +82,7 @@ ASM_NAME(synth_1to1_s32_s_x86_64_asm):
 	subq		$24, %rsp  /* stack alignment + temp */
 #endif
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	shlq		$32, %rax
 	shrq		$30, %rax
 	movq		%rcx, %rsi
@@ -451,7 +451,7 @@ Loop_start_2:
 	movd		%xmm0, %eax
 	andl		$0xffff, %eax
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm8
--- origsrc/mpg123-1.15.4/src/libmpg123/synth_x86_64.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/synth_x86_64.S	2013-09-17 21:16:47.327984800 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *window; */
 #define ARG0 %r10
 /* short *b0; */
@@ -57,7 +57,7 @@ ASM_NAME(maxmin_x86_64):
 	ALIGN16
 .globl ASM_NAME(synth_1to1_x86_64_asm)
 ASM_NAME(synth_1to1_x86_64_asm):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movq		%rcx, ARG0
 	subq		$104, %rsp /* stack alignment + 6 xmm registers */
 	movaps		%xmm6, (%rsp)
@@ -230,7 +230,7 @@ Loop_start_2:
 	
 	movd		XMMREG_CLIP, %eax
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm12
--- origsrc/mpg123-1.15.4/src/libmpg123/synth_x86_64_accurate.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/synth_x86_64_accurate.S	2013-09-17 21:16:47.331985100 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *window; */
 #define ARG0 %r10
 /* short *b0; */
@@ -56,7 +56,7 @@ ASM_NAME(maxmin_s16):
 	ALIGN16
 .globl ASM_NAME(synth_1to1_x86_64_accurate_asm)
 ASM_NAME(synth_1to1_x86_64_accurate_asm):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movq		%rcx, ARG0
 	subq		$152, %rsp /* stack alignment + 9 xmm registers */
 	movaps		%xmm6, (%rsp)
@@ -284,7 +284,7 @@ Loop_start_2:
 	
 	movd		XMMREG_CLIP, %eax
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm8
--- origsrc/mpg123-1.15.4/src/libmpg123/synth_x86_64_float.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/synth_x86_64_float.S	2013-09-17 21:16:47.336985300 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *window; */
 #define ARG0 %r10
 /* short *b0; */
@@ -50,7 +50,7 @@ ASM_NAME(scale_x86_64):
 	ALIGN16
 .globl ASM_NAME(synth_1to1_real_x86_64_asm)
 ASM_NAME(synth_1to1_real_x86_64_asm):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movq		%rcx, ARG0
 	subq		$120, %rsp /* stack alignment + 7 xmm registers */
 	movaps		%xmm6, (%rsp)
@@ -244,7 +244,7 @@ Loop_start_2:
 	
 	xorl		%eax, %eax
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm8
--- origsrc/mpg123-1.15.4/src/libmpg123/synth_x86_64_s32.S	2013-05-20 06:39:33.000000000 -0500
+++ src/mpg123-1.15.4/src/libmpg123/synth_x86_64_s32.S	2013-09-17 21:16:47.340985600 -0500
@@ -8,7 +8,7 @@
 
 #include "mangle.h"
 
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 /* short *window; */
 #define ARG0 %r10
 /* short *b0; */
@@ -63,7 +63,7 @@ ASM_NAME(maxmin_s32):
 	ALIGN16
 .globl ASM_NAME(synth_1to1_s32_x86_64_asm)
 ASM_NAME(synth_1to1_s32_x86_64_asm):
-#ifdef _WIN64 /* should save xmm6-15 */
+#if defined(_WIN64) || defined(__CYGWIN__) /* should save xmm6-15 */
 	movq		%rcx, ARG0
 	subq		$168, %rsp /* stack alignment + 10 xmm registers */
 	movaps		%xmm6, (%rsp)
@@ -294,7 +294,7 @@ Loop_start_2:
 	
 	movd		XMMREG_CLIP, %eax
 	
-#ifdef _WIN64
+#if defined(_WIN64) || defined(__CYGWIN__)
 	movaps		(%rsp), %xmm6
 	movaps		16(%rsp), %xmm7
 	movaps		32(%rsp), %xmm8
